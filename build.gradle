plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'

	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

protobuf {
	// Configure the protoc executable.
	protoc {
		// Download from the repository.
		artifact = 'com.google.protobuf:protoc:3.25.1'
	}

	// Locate the codegen plugins.
	plugins {
		// Locate a plugin with name 'grpc'.
		grpc {
			// Download from the repository.
			artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
		}
	}
	generateProtoTasks {
		all().each { task ->
			task.plugins {
				grpc {}
			}
		}
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.google.protobuf:protobuf-java:3.25.1'

	implementation 'io.asyncer:r2dbc-mysql:1.4.0' // mysql r2dbc 라이브러리

	//webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

	//armeria (grpc, webflux integration)
	implementation "com.linecorp.armeria:armeria:1.32.3"
	implementation "com.linecorp.armeria:armeria-grpc:1.32.3"
	implementation 'com.linecorp.armeria:armeria-spring-boot3-webflux-autoconfigure:1.32.3'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test' // reactor test
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// javax.annotation.Generate 클래스 오류로 수동 추가
	compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 세팅
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 세팅
}

tasks.named("compileJava") { // 프로포파일 빌드 -> java 파일 자동생성 정상 동작안함..
	dependsOn("generateProto")
}

tasks.named('test') {
	useJUnitPlatform()
}
